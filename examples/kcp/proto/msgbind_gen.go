// Auto generated by github.com/bobwong89757/cellmesh/protogen
// DO NOT EDIT!

package proto

import (
	"github.com/bobwong89757/cellnet"
	"github.com/bobwong89757/cellnet/codec"
	_ "github.com/bobwong89757/cellnet/codec/gogopb"
	"reflect"
)

// Make compiler import happy
var (
	_ cellnet.Event
	_ codec.CodecRecycler
	_ reflect.Type
)

// game
var (
	Handle_Game_LoginServer = func(ev cellnet.Event) { panic("'LoginServer' not handled") }
	Handle_Game_Default     func(ev cellnet.Event)
)

func GetMessageHandler(svcName string) cellnet.EventCallback {

	switch svcName {
	case "game":
		return func(ev cellnet.Event) {
			switch ev.Message().(type) {
			case *LoginServer:
				Handle_Game_LoginServer(ev)
			default:
				if Handle_Game_Default != nil {
					Handle_Game_Default(ev)
				}
			}
		}
	}

	return nil
}

func init() {

	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("gogopb"),
		Type:  reflect.TypeOf((*EchoAck)(nil)).Elem(),
		ID:    3013,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("gogopb"),
		Type:  reflect.TypeOf((*LoginServer)(nil)).Elem(),
		ID:    2001,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("gogopb"),
		Type:  reflect.TypeOf((*LoginServerACK)(nil)).Elem(),
		ID:    2002,
	})
}
